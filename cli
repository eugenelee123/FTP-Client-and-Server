import socket
import os
import sys

if (len(sys.argv) < 3):
    print("USAGE python " + sys.argv[0] + " <server machine> <server port>")
    exit()

#Need to use DNS to do an IP look up if an IP is not specified
machine = sys.argv[1]
port = int(sys.argv[2])

# print("Machine: ", machine)
# print("Port: ", port)
 
#AF_INET refers to ipv4, SOCK_STREAM specifies TCP connection
connSock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
try:
    connSock.connect((machine,port))
except socket.error as e:
    print("Connection failed. Reason: ", e)
    sys.exit()

option = ""

def get(socket,fileName):
    
    try:
        socket.send("get".encode())
    except Exception as e:
        print("Error",e)
        return
    
    # try:
    #     socket.recv(1024)
    #     socket.send(fileName.encode())
    # except Exception as e:
    #     print("Error",e)

    while(1):
        fileData = fileName.read(65536)
        dataSizeStr = str(len(fileData))
        while len(dataSizeStr) < 10:
            dataSizeStr = "0"+dataSizeStr
        fileData = dataSizeStr + fileData
        numSent = 0

        while len(fileData) > numSent:
            numSent += socket.sendto(fileData.encode(),(machine,port))
        break

    print("Received ", numSent, " bytes.")
    


def put(socket,fileName):
    
    try:
        socket.send("put".encode())
    except Exception as e:
        print("Error",e)
        return
    
    # try:
    #     connSock.recv(1024)
    #     connSock.send(fileName.encode())
    # except Exception as e:
    #     print("Error",e)
    
    while(1):
        fileData = fileName.read(65536)
        dataSizeStr = str(len(fileData))
        while len(dataSizeStr) < 10:
            dataSizeStr = "0"+dataSizeStr
        fileData = dataSizeStr + fileData
        numSent = 0

        while len(fileData) > numSent:
            numSent += socket.sendto(fileData.encode(),(machine,port))
        break

    print("Sent ", numSent, " bytes.")

def ls(socket):
    try:
        socket.send("ls".encode())
    except Exception as e:
        print("Error: ",e)
        return

    try:
        numFiles = int(socket.recv(40).decode())
        print("Number of Files in Directory:",numFiles)
    except Exception as e:
        print(e)

    

# If we have time, let's implement error checking
while(option != "quit"):

    option = input("ftp> ")

    if("get" in option):
        option = option.split(" ",1)
        fileName = option[1]
        fileObj = open(fileName, "r")

        get(connSock,fileObj)
        fileObj.close()

    if("put" in option):
        option = option.split(" ",1)
        fileName = option[1]
        fileObj = open(fileName, "r")
    
        put(connSock,fileObj)
        fileObj.close()
        
    if("ls" in option):
        
        ls(connSock)

connSock.close()
